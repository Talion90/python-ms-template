[project]
name = "python-ms-template"
version = "0.1.0"
description = "A template for a microservice based on python"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "dynaconf>=3.2.11",
    "mypy>=1.16.1",
    "pytest>=8.4.1",
    "ruff>=0.12.1",
    "isort>=5.13.0",
]

[tool.ruff]
# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.13
target-version = "py313"

# Exclude common directories
exclude = [
    ".venv",
    "__pycache__",
    ".git",
    ".pytest_cache",
    ".mypy_cache",
    ".ruff_cache",
    "dist",
    "build",
    ".eggs",
    "*.egg-info",
    "alembic",
    ".tox",
    ".coverage",
    "htmlcov",
    ".env",
    ".env.*",
]

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E", "F", "W", "Q", "B"]
ignore = ["E203", "E501"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.isort]
skip_glob = [
    ".venv/*",
    "__pycache__/*",
    ".git/*",
    ".pytest_cache/*",
    ".mypy_cache/*", 
    ".ruff_cache/*",
    "dist/*",
    "build/*",
    ".eggs/*",
    "*.egg-info/*",
    "alembic/*",
    ".tox/*",
    ".coverage/*",
    "htmlcov/*",
]
profile = 'black'
multi_line_output = 3
force_grid_wrap = 3
include_trailing_comma = true
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
exclude = [
    "^.venv/",
    "^__pycache__/",
    "^.git/",
    "^.pytest_cache/",
    "^.mypy_cache/",
    "^.ruff_cache/",
    "^dist/",
    "^build/",
    "^.eggs/",
    "^.*\\.egg-info/",
    "^alembic/",
    "^.tox/",
    "^.coverage/",
    "^htmlcov/",
]
